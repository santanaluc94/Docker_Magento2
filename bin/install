#!/bin/bash
SuccessColor='\033[0;32m'
ErrorColor='\033[0;31m'
EndColor='\033[0m'

if [ ! -f ./.env ]; then
    cp ./.env_local.example ./.env
fi

set -a
. ./.env
set +a

echo -e "${SuccessColor}Generating ssh files.${EndColor}"
openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -sha256 -days 3650 -nodes
mv cert.pem ./.docker/nginx/
mv key.pem ./.docker/nginx/

echo -e "${SuccessColor}Building containers.${EndColor}"
docker compose up -d

if [[ $? -ne 0 ]]; then
    echo -e "${ErrorColor}Something went wrong creating the containers.${EndColor}"
    exit
fi

echo -e "${SuccessColor}Running composer install.${EndColor}"
bin/cli composer install

if [[ $? -ne 0 ]]; then
    echo -e "${ErrorColor}Something went wrong running 'composer install' command.${EndColor}"
    exit
fi

echo -e "${SuccessColor}Installing Magento 2.${EndColor}"
bin/cli bin/magento setup:install \
--base-url=$MAGENTO_URL \
--backend-frontname=admin \
--db-host=db \
--db-name=$DB_NAME \
--db-user=$DB_USER \
--db-password=$DB_PASSWORD \
--admin-firstname=Admin \
--admin-lastname=Magento \
--admin-email=admin@admin.com \
--admin-user=admin \
--admin-password=admin123 \
--language=pt_BR \
--currency=BRL \
--timezone=America/Sao_Paulo \
--use-rewrites=1 \
--amqp-host=rabbitmq \
--amqp-port=$RABBITMQ_QUEUE_PORT \
--amqp-user=$RABBITMQ_DEFAULT_USER \
--amqp-password=$RABBITMQ_DEFAULT_PASS \
--search-engine=elasticsearch7 \
--elasticsearch-host=elasticsearch \
--elasticsearch-port=$ELASTICSEARCH_PORT \
--cleanup-database

if [[ $? -ne 0 ]]; then
    echo -e "${ErrorColor}Something went wrong installing Magento 2.${EndColor}"
    exit
fi

echo -e "${SuccessColor}Configuring developer mode.${EndColor}"
bin/cli bin/magento deploy:mode:set developer
bin/cli bin/magento module:disable {Magento_AdminAdobeImsTwoFactorAuth,Magento_TwoFactorAuth}

echo -e "${SuccessColor}Configuring cache for Redis.${EndColor}"
bin/cli bin/magento setup:config:set --cache-backend=redis \
    --cache-backend-redis-server=redis \
    --cache-backend-redis-port=$RABBITMQ_DEFAULT_PASS \
    --cache-backend-redis-db=0
bin/cli bin/magento setup:config:set --page-cache=redis \
    --page-cache-redis-server=redis \
    --page-cache-redis-db=1

echo -e "${SuccessColor}Saving basic configs for Magento.${EndColor}"
bin/cli bin/magento config:set system/security/max_session_size_admin 2560000
bin/cli bin/magento config:set general/country/default BR
bin/cli bin/magento config:set general/locale/weight_unit kgs
bin/cli bin/magento config:set customer/captcha/enable 0
bin/cli bin/magento config:set customer/captcha/forms NULL
bin/cli bin/magento config:set customer/create_account/vat_frontend_visibility 1
bin/cli bin/magento config:set customer/address/street_lines 4
bin/cli bin/magento config:set customer/address/taxvat_show opt
bin/cli bin/magento config:set admin/security/session_lifetime 31536000
bin/cli bin/magento config:set admin/captcha/enable 0
bin/cli bin/magento config:set admin/captcha/forms NULL
bin/cli bin/magento config:set dev/debug/template_hints_storefront 1
bin/cli bin/magento config:set dev/debug/template_hints_storefront_show_with_parameter 1
bin/cli bin/magento config:set dev/debug/template_hints_parameter_value magento

echo -e "${SuccessColor}Compiling Magento.${EndColor}"
bin/cli bin/magento app:config:import
bin/cli bin/magento setup:upgrade
bin/cli bin/magento indexer:reindex
bin/cli bin/magento setup:di:compile
bin/cli bin/magento setup:static-content:deploy -f
bin/cli bin/magento cache:clean
bin/cli bin/magento cache:flush
chmod 777 ./src/var/ -R
chmod 777 ./src/pub/ -R
chmod 777 ./src/generated/ -R